from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.keys import Keys
import unittest


class VisitorTest(unittest.TestCase):

    def setUp(self):
        self.browser = webdriver.Firefox()
        self.browser.implicitly_wait(3)

    def tearDown(self):
        self.browser.quit()

    def test_user_can_open_site_and_navigate(self):
        # user opens the site
        self.browser.get('http://localhost:8000/urly')

        # they see a website with urly-bird' in the title
        self.assertIn('Urly-Bird', self.browser.find_element_by_tag_name(\
                                        'h1').text)

        # they see a place to log in, a place to register
        # and some general information about trending links
        self.browser.find_element_by_id('login_link')
        self.browser.find_element_by_id('registration_link')
        self.browser.find_element_by_id('trending')

        # the user clicks a link info button to see more information
        bm = self.browser.find_element_by_class_name('bookmark')
        bmtext = bm.text
        bm.click()
        # they get a page where the see the link's information(
        # title, description), the user
        # that created the link,
##link stats and tags for that link
        self.assertEqual(bmtext, self.browser.find_element_by_tag_name('h1').text)

        pf = self.browser.find_element_by_class_name('profile')
        pf_text = pf.text
        # the user clicks on the user that created the link
        pf.click()

        # they see a user page with user name, profile, and
        # links generated by that user
        # in reverse chronological order with tags
        h_1 = self.browser.find_element_by_id('username')
        self.assertEqual(pf_text, h_1.text)
        #
        self.browser.find_element_by_id('bookmarks')

        ## the user clicks a tag, and sees a page with links tagged
        ## with that tag ranked by recent clicks.
        tag = self.browser.find_element_by_class_name('tag')
        tag_text = tag.text
        tag.click()
        self.assertEqual(tag_text, self.browser.find_element_by_tag_name('h1').text)

        # the user backtracks to the main page and decides to log in
        self.browser.find_element_by_id('home').click()
        self.browser.find_element_by_id('login').click()

        # they are prompted to enter a username and password, or register for an account
        un = self.browser.find_element_by_id('id_username')
        pw = self.browser.find_element_by_id('id_password')

        # they enter their username and password
        username = 'Alexis Lind'
        un.send_keys(username)
        pw.send_keys('1')

        # and submit
        self.browser.find_element_by_id('submit').click()

        # they see their own page, similar to the user page before
        h_1 = self.browser.find_element_by_tag_name('h1')
        self.assertEqual(h_1.text, username)

        # but with options to create new links, delete links, and
        # edit the tags on a link.
        ed_tag = self.browser.find_element_by_class_name('edit-tags')

        # the user decides to edit the tags for a link
        ed_tag.click()

        # they see the bookmark they're editing
        h_1 = self.browser.find_element_by_tag_name('h1')
        self.assertEqual(username, h_1.text)

        # the user adds a new tag to their first link, 'beastly'
        self.browser.find_element_by_id('add-tag')


# the user logs out, is redirected to the main page,
# and closes the browser.
if __name__ == '__main__':
    unittest.main()#warnings='ignore')
